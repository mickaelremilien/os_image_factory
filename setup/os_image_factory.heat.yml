#
##
### Written by the CAT (Cloudwatt Automation Team)
##
#
heat_template_version: 2013-05-23

description: Openstack Image Factory

parameters:
  keypair_name:
    description: Keypair to inject in instances
    type: string

  image_id:
    #default: "185e1975-c9c5-4358-909e-5e329808902e"
    default: "8a4fa0b6-4191-4c23-92f2-10d82f54c41b"
    description: Image ID of the system (default is Cloudwatt's Debian Jessie)
    type: string

  flavor_name:
    default: n2.cw.standard-8
    label: Instance Type (Flavor)
    description: Flavor to use for the deployed instance
    type: string
    constraints:
      - allowed_values:
        - n2.cw.highcpu-2
        - n2.cw.highcpu-4
        - n2.cw.highcpu-8
        - n1.cw.highcpu-2
        - n1.cw.highcpu-4
        - n1.cw.highcpu-8
        - n1.cw.standard-1
        - n2.cw.standard-12
        - n2.cw.standard-4
        - n2.cw.standard-8
        - n1.cw.standard-2
        - n1.cw.standard-4
        - n1.cw.standard-8
        - n1.cw.standard-12
        - n1.cw.standard-16
        - n1.cw.highmem-2
        - n1.cw.highmem-4
        - n1.cw.highmem-8
        - n1.cw.highmem-12


resources:
  dmz:
    type: OS::Neutron::Net

  dmz_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: dmz }
      ip_version: 4
      cidr: 10.42.42.0/24
      allocation_pools:
        - { start: 10.42.42.100, end: 10.42.42.199 }

  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      external_gateway_info:
        enable_snat: true
        network: "public"

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource : router }
      subnet_id: { get_resource : dmz_subnet }

  sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }

  ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: b5dd7532-1533-4b9c-8bf9-e66631a9be1d
      #floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517

  system_bootstrap:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        export DEBIAN_FRONTEND=noninteractive

        apt-get update
        apt-get -o Dpkg::Options::="--force-confold" upgrade -y
        apt-get -o Dpkg::Options::="--force-confold" remove python-pip --purge -y
        apt-get -o Dpkg::Options::="--force-confold" install aptitude git python-dev python-setuptools build-essential -y

        for i in 1 2 3 4 5; do easy_install pip && break || sleep 2; done

        pip install -U pyopenssl ndg-httpsclient pyasn1
        pip install -U pip ansible

        mkdir /etc/ansible
        echo -e "[local]\n127.0.0.1 ansible_connection=local ansible_ssh_user=cloud" > /etc/ansible/hosts

        git clone https://github.com/cloudwatt/os_image_factory.git /root/os_image_factory
        /usr/local/bin/ansible-playbook /root/os_image_factory/setup/os_image_factory.playbook.yml -vvv > /var/log/os_image_factory.setup.log 2>&1

  jenkins_profile:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
          - path: /var/lib/jenkins/.profile
            permissions: '0644'
            owner: jenkins:jenkins
            content:
              str_replace:
                template: |
                  # Set with your own tenant values
                  export OS_USERNAME="mickael.remilien+compute@cloudwatt.com"
                  export OS_TENANT_NAME="dd26bf86-d9bc-11e3-ad8b-525400872571"
                  export OS_TENANT_ID="366ec8aa140c4428bebedf49365e90d9"
                  export OS_PASSWORD="ceneserapasparhasard94"

                  export OS_REGION_NAME="fr1"
                  export OS_AUTH_URL="https://identity.fr1.cloudwatt.com/v2.0"

                  export FACTORY_NETWORK_ID=$network_id$
                  export FACTORY_SECURITY_GROUP_ID=$security_group_id$

                  if [ ! -z "$OS_USERNAME" -a ! -z "$OS_PASSWORD" ]; then
                    if [ ! -z "$OS_TENANT_NAME" -a ! -z "$OS_TENANT_ID" ]; then
                      export FACTORY_SECURITY_GROUP_NAME="$(neutron security-group-show $FACTORY_SECURITY_GROUP_ID | grep name | cut -d"|" -f3 | tr -d " ")"
                    fi
                  fi
                params:
                  $network_id$: { get_resource: dmz }
                  $security_group_id$: { get_resource: sg }

  init_server:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: system_bootstrap }
      - config: { get_resource: jenkins_profile }

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image: { get_param: image_id }
      flavor: { get_param: flavor_name }
      networks:
        - { network: { get_resource: dmz } }
      security_groups:
        - { get_resource: sg }
      user_data_format: RAW
      user_data:
        get_resource: init_server


  factory_internet_surface:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: ip }
      server_id: { get_resource: server }

outputs:
  floating_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [ip, floating_ip_address] }
