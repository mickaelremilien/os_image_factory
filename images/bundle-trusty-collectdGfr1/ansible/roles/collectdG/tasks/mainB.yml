---
#  - name: download packages
#    args:
#      #chdir: /etc/openvpn/
#      executable: /bin/bash
#    shell: |
#      sudo apt-get install apache2 libapache2-mod-wsgi graphite-web graphite-carbon -y
#      sudo echo "deb https://packagecloud.io/grafana/stable/debian/ wheezy maindeb https://packagecloud.io/grafana/stable/debian/ wheezy main" >>  /etc/apt/sources.list
#      sudo curl https://packagecloud.io/gpg.key | apt-key add -
#      sudo apt-get update -y
#      wget https://grafanarel.s3.amazonaws.com/builds/grafana_3.0.3-1463994644_amd64.deb
#      sudo apt-get install -y adduser libfontconfig
#      sudo dpkg -i grafana_3.0.3-1463994644_amd64.deb
#      sudo apt-get update
#      sudo apt-get install grafana
#      sudo apt-get install apt-transport-https -y
#      sudo apt-get install collectd collectd-utils -y

  # - name: apt-get update & upgrade
  #   apt:
  #     upgrade=full
  #     update_cache=yes
  #     cache_valid_time=3600

- name: packages installed
  apt:
    pkg={{ item }}
    state=present
  with_items:
    - apache2
    - libapache2-mod-wsgi
    - graphite-web
    - graphite-carbon

- name: download packages
  args:
    #chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    sudo echo "deb https://packagecloud.io/grafana/stable/debian/ wheezy maindeb https://packagecloud.io/grafana/stable/debian/ wheezy main" >>  /etc/apt/sources.list

  # - name: fr locale generated
  #   locale_gen: name=fr_FR.UTF-8 state=present

  # - name: apt-get update & upgrade
  #   apt:
  #     upgrade=full
  #     update_cache=yes
  #     cache_valid_time=3600

- name: dpkg grapfana
  apt: deb=https://grafanarel.s3.amazonaws.com/builds/grafana_3.0.3-1463994644_amd64.deb

- name: packages installed
  apt:
    pkg={{ item }}
    state=present
  with_items:
    - adduser
    - libfontconfig
    - grafana
    - apt-transport-https
    - collectd
    - collectd-utils

- name: configuration Apache pour graphite
  args:
    #chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    sudo -i
    a2dissite 000-default
    cp /usr/share/graphite-web/apache2-graphite.conf /etc/apache2/sites-available
    a2ensite apache2-graphite

  #- name: setting enable carbon-cache
- replace:
    dest=/etc/default/graphite-carbon
    regexp='CARBON_CACHE_ENABLED=false'
    replace='CARBON_CACHE_ENABLED=true'

  #- name: setting enable carbon-cache2
- replace:
    dest=/etc/carbon/carbon.conf
    regexp='ENABLE_LOGROTATION = False'
    replace='ENABLE_LOGROTATION = True'

  #- name: setting enable carbon-cache3
- replace:
    dest=/etc/carbon/carbon.conf
    regexp='MAX_CREATES_PER_MINUTE = 50'
    replace='MAX_CREATES_PER_MINUTE = 600'

- name:   configuration graphite-carbon
  args:
    #chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    sudo -i
    cp /usr/share/doc/graphite-carbon/examples/storage-aggregation.conf.example /etc/carbon/storage-aggregation.conf

  #- name: setting  graphite-local
- replace:
    dest=/etc/graphite/local_settings.py
    regexp='UNSAFE_DEFAULT'
    replace='jkfdjlskfjdslkjopelezkmlezakmlza5654trlkre'

- replace:
    dest=/etc/graphite/local_settings.py
    regexp='#SECRET_KEY'
    replace='SECRET_KEY'
  #- name: setting  graphite-local2

- replace:
    dest=/etc/graphite/local_settings.py
    regexp='#TIME_ZONE'
    replace='TIME_ZONE'

- replace:
    dest=/etc/graphite/local_settings.py
    regexp='America/Los_Angeles'
    replace='Europe/Paris'

- lineinfile: dest=/etc/collectd/collectd.conf line="<Plugin write_graphite>"
- lineinfile: dest=/etc/collectd/collectd.conf line="        <Carbon>"
- lineinfile: dest=/etc/collectd/collectd.conf line="                Host "localhost""
- lineinfile: dest=/etc/collectd/collectd.conf line="                Port "2003""
- lineinfile: dest=/etc/collectd/collectd.conf line="                LogSendErrors true"
- lineinfile: dest=/etc/collectd/collectd.conf line="                Prefix "collectd""
- lineinfile: dest=/etc/collectd/collectd.conf line="                Postfix "collectd""
- lineinfile: dest=/etc/collectd/collectd.conf line="                StoreRates false"
- lineinfile: dest=/etc/collectd/collectd.conf line="                AlwaysAppendDS false"
- lineinfile: dest=/etc/collectd/collectd.conf line="                EscapeCharacter "_""
- lineinfile: dest=/etc/collectd/collectd.conf line="        </Carbon>"
- lineinfile: dest=/etc/collectd/collectd.conf line="##</Plugin>"

- replace:
    dest=//etc/collectd/collectd.conf
    regexp='##</Plugin>'
    replace='</Plugin>'

# - name: download plugings
#   args:
#     #chdir: /etc/openvpn/
#     executable: /bin/bash
#   shell: |
#     sudo grafana-cli plugins install grafana-piechart-panel
#     sudo grafana-cli plugins install opennms-datasource
#     sudo grafana-cli plugins install bosun-app
#     sudo grafana-cli plugins install raintank-worldping-app
#     sudo grafana-cli plugins install raintank-snap-app
#     sudo grafana-cli plugins install grafana-example-app
#     sudografana-cli plugins install grafana-clock-panel
#     sudo grafana-cli plugins install alexanderzobnin-zabbix-app
#     sudo grafana-cli plugins install fastweb-openfalcon-datasource
#     sudo grafana-cli plugins install stagemonitor-elasticsearch-app
#     sudo grafana-cli plugins install grafana-influxdb-08-datasource
#     sudo grafana-cli plugins install mtanda-histogram-panel
#     sudo grafana-cli plugins install udoprog-heroic-datasource
#     sudo grafana-cli plugins install grafana-simple-json-datasource
#     sudo grafana-cli plugins install grafana-kairosdb-datasource
#     sudo grafana-cli plugins install ns1-app

- name: demarrage services
  args:
    #chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    graphite-manage syncdb --noinput
    sudo chown _graphite:_graphite /var/lib/graphite/graphite.db
    sudo service carbon-cache restart
    sudo service apache2 restart
    sudo service grafana-server restart
    sudo service collectd restart
    sudo update-rc.d grafana-server defaults 95 10


    #   - name: download whisper and force basic auth
    #     get_url:
    #       url=https://launchpad.net/graphite/0.9/0.9.10/+download/whisper-0.9.10.tar.gz
    #       dest=/tmp/graphite/whisper-0.9.10.tar.gz
    #       force_basic_auth=yes
    #
    #   - name: download graphite-web and force basic auth
    #     get_url:
    #       url=https://launchpad.net/graphite/0.9/0.9.10/+download/graphite-web-0.9.10.tar.gz
    #       dest=/tmp/graphite/graphite-web-0.9.10.tar.gz
    #       force_basic_auth=yes
    #
    # # Unarchive  packages
    #
    #   - name: unarchive carbon
    #     unarchive:
    #       src=/tmp/graphite/carbon-0.9.10.tar.gz
    #       dest=/tmp/graphite/
    #       #carbon-0.9.10
    #
    #   - name: unarchive whisper
    #     unarchive:
    #       src=/tmp/graphite/whisper-0.9.10.tar.gz
    #       dest=/tmp/graphite/
    #       #whisper-0.9.10
    #
    #   - name: unarchive graphite-web
    #     unarchive:
    #       src=/tmp/graphite/graphite-web-0.9.10.tar.gz
    #       dest=/tmp/graphite/
    #       #graphite-web-0.9.10
    #
    # # Install packages
    #
    #   - name: Install packages
    #     args:
    #       chdir: /tmp/graphite/
    #       executable: /bin/bash
    #     shell: |
    #       cd graphite-web-0.9.10
    #       sudo python setup.py install
    #       cd ..
    #       cd whisper-0.9.10
    #       sudo python setup.py install
    #       cd ..
    #       cd carbon-0.9.10
    #       sudo python setup.py install
    #
    # # Configuration Carbon
    #   - name: config carbon
    #     copy:
    #       src=/opt/graphite/conf/carbon.conf.example
    #       dest=/opt/graphite/conf/carbon.conf
    #       #owner=
    #       #group=
    #       #mode=0644
    #
    #   - name: config carbon2
    #     copy:
    #       src=/opt/graphite/conf/storage-schemas.conf.example
    #       dest=/opt/graphite/conf/storage-schemas.conf
    #       #owner=
    #       #group=
    #       #mode=0644
    #
    #   #Configuration de la webapp
    #
    #   - name: conf web app
    #     file: path=/etc/httpd/conf.d/wsgi.conf state=absent
    #       #owner=foo
    #       #group=foo
    #
    #
    #   - name: conf web app2
    #     copy:
    #       src=/opt/graphite/examples/example-graphite-vhost.conf
    #       dest=/etc/httpd/conf.d/vhost-graphite.conf
    #       #owner=
    #       #group=
    #       #mode=0644
    #
    #   - name: conf web app3
    #     copy:
    #       src=/opt/graphite/conf/graphite.wsgi.example
    #       dest=/opt/graphite/conf/graphite.wsgi
    #       #owner=
    #       #group=
    #       #mode=0644
    #
    #   - name: conf web app4
    #     copy:
    #       src=/opt/graphite/webapp/graphite/local_settings.py.example
    #       dest=/opt/graphite/webapp/graphite/local_settings.py
    #       #owner=
    #       #group=
    #       #mode=0644
    #
    #   - name: demarrage services
    #     args:
    #       #chdir: /etc/openvpn/
    #       executable: /bin/bash
    #     shell: |
    #       sudo python /opt/graphite/webapp/graphite/manage.py syncdb --noinput
    #       sudo service httpd start
    #       sudo ./opt/graphite/bin/carbon-cache.py start
