---
- name: wheezy backports repositories added
  apt_repository: state=present repo='deb http://ftp.us.debian.org/debian wheezy-backports main'

- name: apt-get update & upgrade
  apt:
    upgrade=full
    update_cache=yes
    cache_valid_time=3600

- name: enable IPv4 forwarding
  shell: sysctl net.ipv4.ip_forward=1

- name: enable IPv6 forwarding
  shell: sysctl net.ipv6.conf.all.forwarding=1

- name: packages installed
  apt:
    pkg={{ item }}
    state=present
  with_items:
    - openssl
    - curl
    - bzip2
    - unzip
    - gzip
    - tar
    - git
    - libssl-dev
    - openvpn
    - iptables-persistent
    - traceroute
    - easy-rsa
    - gadmin-openvpn-server

- name: cw user present
  user:
    name=cloud
    shell=/bin/bash
    group=cloud
    groups=sudo
    append=yes

- name: desktop dir present
  file:
    path="/home/cloudwatt/{{ item }}"
    state=directory
    owner=cloud
    group=cloud
    mode=0755
  with_items:
    - Desktop
    - icons
    - apps

- name: fr locale generated
  locale_gen: name=fr_FR.UTF-8 state=present

- name: Gunzip server configuration copy
  copy:
    src=/usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz
    dest=/etc/openvpn/


- name: Gunzip server configuration
  command:
    sudo gunzip /etc/openvpn/server.conf.gz

- name: Copy file configuration client
  copy:
    src=/usr/share/doc/openvpn/examples/sample-config-files/client.conf
    dest=/etc/openvpn/
    owner=cloud
    group=cloud
    mode=644
    backup=yes


- name: Copy file configuration easy-rsa
  copy:
    src=/usr/share/easy-rsa
    dest=/etc/openvpn/
    owner=cloud
    group=cloud
    mode=777
    backup=yes


- name: Manage openssh firewall with UFW
  ufw: rule=allow name=OpenSSH


- name: Manage port 1194 firewall with UFW
  ufw: rule=allow port=1194 proto=udp


#openvpn/client.conf
- name: client.conf configuration
  copy:
    src=roles/vpn_static_server/files/client.conf
    dest=/etc/openvpn/client.conf
    owner=cloud
    group=cloud
    mode=0644

#openvpn/server.conf
- name: server.conf configuration
  copy:
    src=roles/vpn_static_server/files/server.conf
    dest=/etc/openvpn/server.conf
    owner=cloud
    group=cloud
    mode=0644

#sysctl.conf
- name: sysctl.conf configuration
  copy:
    src=roles/vpn_static_server/files/sysctl.conf
    dest=/etc/sysctl.conf
    owner=root
    group=root
    mode=0644

#ufw/before.rules
- name: before.rules configuration
  copy:
    src=roles/vpn_static_server/files/before.rules
    dest=/etc/ufw/before.rules
    owner=root
    group=root
    mode=0755

#easy-rsa/vars
- name: var configuration
  copy:
    src=roles/vpn_static_server/files/vars
    dest=/etc/openvpn/easy-rsa/vars
    owner=cloud
    group=cloud
    mode=0644


#ufw
- name: before.rules configuration
  copy:
    src=roles/vpn_static_server/files/ufw
    dest=/etc/default/ufw
    owner=root
    group=root
    mode=0755

- name: certificate configuration COUNTRY
  replace:
    dest=/etc/openvpn/easy-rsa/vars
    regexp='export KEY_COUNTRY="FR"'
    replace='export KEY_COUNTRY="{{COUNTRY}}"'


- name: certificate configuration PROVINCE
  replace:
    dest=/etc/openvpn/easy-rsa/vars
    regexp='export KEY_PROVINCE="IDF"'
    replace='export KEY_PROVINCE="{{PROVINCE}}"'


- name: certificate configuration CITY
  replace:
    dest=/etc/openvpn/easy-rsa/vars
    regexp='export KEY_CITY="PARIS"'
    replace='export KEY_CITY="{{CITY}}"'


- name: certificate configuration ORGANISATION
  replace:
    dest=/etc/openvpn/easy-rsa/vars
    regexp='export KEY_ORG="CLOUDWATT"'
    replace='export KEY_ORG="{{ORGANISATION}}"'


- name: certificate configuration EMAIL
  replace:
    dest=/etc/openvpn/easy-rsa/vars
    regexp='export KEY_EMAIL="contact@cloudwatt.com"'
    replace='export KEY_EMAIL="{{EMAIL}}"'


- name: create keys folder
  file:
    path=/etc/openvpn/easy-rsa/keys
    state=directory
    owner=cloud
    group=cloud
    recurse=yes

- name: setting server.conf
  replace:
    dest=/etc/openvpn/server.conf
    regexp='push "route X.X.X.X 255.255.255.0"'
    replace='push "route {{server_cidr}} 255.255.255.0"'



- name: generate openvpn conf1
  args:
    chdir: /etc/openvpn/easy-rsa
    executable: /bin/bash
  shell: |
    source vars
    ./clean-all
    ./build-dh
    ./pkitool --initca
    ./pkitool --server server
    ./pkitool client1

- name: generate openvpn conf3
  args:
    chdir: /etc/openvpn/easy-rsa
    executable: /bin/bash
  shell: |
    sudo chgrp cloud /etc/openvpn/easy-rsa/keys/
    sudo chown cloud /etc/openvpn/easy-rsa/keys/
    cd /etc/openvpn
    openvpn --genkey --secret ta.key
    sudo cp /etc/openvpn/easy-rsa/keys/dh2048.pem dh2048.pem
    sudo chown cloud dh2048.pem
    sudo chgrp cloud dh2048.pem


- name: Moving server key ca.crt
  copy:
    src=/etc/openvpn/easy-rsa/keys/ca.crt
    dest=/etc/openvpn/ca.crt
    owner=cloud
    group=cloud
    mode=644
    backup=yes

- name: Moving server key client1.crt
  copy:
    src=/etc/openvpn/easy-rsa/keys/server.crt
    dest=/etc/openvpn/server.crt
    owner=cloud
    group=cloud
    mode=644
    backup=yes

- name: Moving server key server.key
  copy:
    src=/etc/openvpn/easy-rsa/keys/server.key
    dest=/etc/openvpn/server.key
    owner=cloud
    group=cloud
    mode=644
    backup=yes

- name: pack config client
  args:
    chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    mkdir configclient
    sudo cp /etc/openvpn/easy-rsa/keys/client1.key /etc/openvpn/
    sudo cp /etc/openvpn/easy-rsa/keys/client1.crt /etc/openvpn/
    sudo mv client1.crt configclient
    sudo mv client1.key configclient
    sudo cp ta.key configclient
    sudo cp ca.crt configclient
    mv client.conf configclient

- name: modification configclient
  replace:
    dest=/etc/openvpn/configclient/client.conf
    regexp='X.X.X.X'
    replace='{{ip_server}}'

- name: setting client.conf
  replace:
    dest=/etc/openvpn/configclient/client.conf
    regexp='route Y.Y.Y.Y 255.255.255.0'
    replace='route {{server_cidr}} 255.255.255.0'

- name: setting server.conf
  replace:
    dest=/etc/openvpn/server.conf
    regexp='X.X.X.X'
    replace='{{server_cidr}}'

- name: pack config client
  args:
    chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    tar czvf configclient.tar.gz configclient
    sudo rm -r configclient
    chown cloud configclient.tar.gz
    chmod 755 configclient.tar.gz
    chgrp cloud configclient.tar.gz
    sudo cp configclient.tar.gz /home/cloud/
    chown cloud:cloud configclient.tar.gz

- name: setting openvpn autostart
  replace:
    dest=/etc/default/openvpn
    regexp='#AUTOSTART="all"'
    replace='AUTOSTART="all"'

- name: iptablenat
  args:
    chdir: /home/cloud
    executable: /bin/bash
  shell: |
    sudo iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
    sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    sudo /etc/init.d/iptables-persistent save
    sudo /etc/init.d/iptables-persistent reload

- name: starting openvpn
  args:
    chdir: /etc/openvpn/
    executable: /bin/bash
  shell: |
    sudo service openvpn start

- name: cleaning
  args:
    chdir: /home/cloud
    executable: /bin/bash
  shell: |
    sudo rm -r os_image_factory
    sudo rm -r config
