heat_template_version: 2013-05-23

parameters:
  lb_pool:
    type: string
    description: The LB pool in which the instance should be added

  lb_port:
    type: number
    description: Port in the LB pool

  image:
    type: string
    description: Glance Image
    default: "Ubuntu 14.04"

  flavor:
    type: string
    description: Flavor
    default: t1.cw.tiny

  key_name:
    type: string
    description: SSH key
    default: mickael

  volume_size:
    type: number
    description: Volume size (Go)
    default: 10

  network_id:
    type: string
    description: Network ID

  security_groups:
    type: comma_delimited_list

  themysqlpwd:
    description: Basic auth password for mysql users
    label: Mysql Auth password
    type: string
    hidden: true
    constraints:
      - length: { min: 6, max: 24 }
        description: Password must be between 6 and 24 characters

resources:

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: egress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: ingress, protocol: TCP, port_range_min: 3306, port_range_max: 3306 }
        - { direction: egress, protocol: TCP, port_range_min: 3306, port_range_max: 3306 }
        - { direction: ingress, protocol: TCP, port_range_min: 4567, port_range_max: 4567 }
        - { direction: egress, protocol: TCP, port_range_min: 4567, port_range_max: 4567 }
        - { direction: ingress, protocol: TCP, port_range_min: 4568, port_range_max: 4568 }
        - { direction: egress, protocol: TCP, port_range_min: 4568, port_range_max: 4568 }
        - { direction: ingress, protocol: TCP, port_range_min: 4444, port_range_max: 4568 }
        - { direction: egress, protocol: TCP, port_range_min: 4444, port_range_max: 4444 }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }

  pool_member:
    depends_on: [instance]
    type: OS::Neutron::PoolMember
    properties:
      pool_id: {get_param: lb_pool}
      address: {get_attr: [instance, first_address]}
      protocol_port: {get_param: lb_port}

  instance:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      networks:
        - network: {get_param: network_id}
      security_groups:
        - {get_resource: security_group}
      metadata:
        services: sql
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/usr/bin/env bash
            echo "$(date) - START" >> /var/log/sql_srv.log
            export DEBIAN_FRONTEND=noninteractive
            apt-get update 2>&1 >> /var/log/sql_srv.log
            echo "$(date) - update done" >> /var/log/sql_srv.log
            apt-get -o Dpkg::Options::="--force-confold" upgrade -y 2>&1 >> /var/log/sql_srv.log
            echo "$(date) - upgrade done" >> /var/log/sql_srv.log
            mkdir -p /var/lib/mysql
            mkfs.ext4 /dev/vdb
            echo '/dev/vdb /var/lib/mysql ext4 defaults 0 2' >> /etc/fstab
            mount -a
            mkdir /etc/ansible
            echo "[local]" >> /etc/ansible/hosts
            echo "127.0.0.1 ansible_connection=local" >> /etc/ansible/hosts
            cd /home/cloud
            echo  "$mysqlpwd$" > /home/cloud/mysqlpwd
            git clone  https://github.com/mickaelremilien/CLOUDPATT.git
            sudo ansible-playbook /home/cloud/CLOUDPATT/image-factory/bundle-trusty-wordpressfr1/ansible/boot2strapMYSQL.yml
            sudo rm -Rf /home/cloud/CLOUDPATT
            sudo rm /home/cloud/mysqlpwd
          params:
            $mysqlpwd$: { get_param: themysqlpwd }

  volume:
    type: OS::Cinder::Volume
    properties:
      size: {get_param: volume_size}

  attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: {get_resource: volume}
      instance_uuid: {get_resource: instance}

outputs:
  first_address:
    description: IP address of the first interface
    value: {get_attr:  [instance, first_address]}

  instance_id:
    description: ID of the instance
    value: {get_resource: instance}

  volume_id:
    description: ID of the volume
    value: {get_resource: volume}
